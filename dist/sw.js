(()=>{"use strict";(new class{constructor(){this.namespace=location.pathname.slice(1,location.pathname.lastIndexOf("/")),this.base=location.protocol+"//"+location.host+"/"+this.namespace+"/",this.dbSchema={name:this.namespace,version:1,onupgradeneeded(e,s,t){t<1&&e.createObjectStore("files",{keyPath:"path"})}}}main(){const e=this.base;self.addEventListener("install",(s=>{console.log("2022-06-14T08:45:32.134Z"),s.waitUntil(async function(s){const t=[e,e+"dist/main.js",e+"dist/1.js",e+"dist/191.js",e+"dist/498.js",e+"dist/588.js",e+"dist/834.js",e+"resources/app.webmanifest",e+"resources/icons/icon-32.png",e+"resources/icons/icon-192.png",e+"resources/icons/icon-512.png",e+"resources/blank.txt",e+"resources/vendor/MaterialIcons-Regular.ttf","https://cdn.jsdelivr.net/npm/@zip.js/zip.js@2.3.18/dist/zip.min.js"],n=await caches.open(s.namespace);await n.addAll(t)}(this))})),self.addEventListener("fetch",(e=>{e.respondWith(this.createResponse(e.request))}))}async createResponse(e){let s=e.url;const t=this.base+"debug/";if((s+"/").startsWith(t)){s=s.split("?")[0].split("#")[0];const e=await async function(e,n,a,o){const r=await function({name:e="",version:s=1,onupgradeneeded:t=null}){return new Promise(((n,a)=>{const o=self.indexedDB.open(e,s);o.onupgradeneeded=e=>{try{t(o.result,o.transaction,e.oldVersion)}catch(e){a(e)}},o.onsuccess=e=>{n(o.result)},o.onerror=e=>{a(e.target.error)}}))}(e);return await new Promise(((e,a)=>{let o;const i=r.transaction(n,"readonly");i.oncomplete=s=>{r.close(),e(o)},i.onerror=e=>{r.close(),a(e.target.error)};try{o=(e=>function({index:e,range:s=null,direction:t="next",forEach:n}){return new Promise(((a,o)=>{let r;const i=e.openCursor(s,t);i.onsuccess=e=>{const s=i.result;if(s){try{r=n(s.value,s)}catch(e){o(e)}s.advance(void 0===r?1:4294967295)}else a(r)},i.onerror=e=>{o(e.target.error)}}))}({index:e.objectStore("files").index("path"),range:IDBKeyRange.only(s.slice(t.length)+("/"===s.slice(-1)?"index.html":"")),forEach:e=>e}))(i)}catch(e){i.abort(),r.close(),a(e)}}))}(this.dbSchema,["files"]);let n=null,a=null;return e?e.file?n=e.file:a={status:301,headers:{Location:s+"/"}}:a={status:404},new Response(n,a)}{const t=await caches.open(this.namespace);return await t.match(e)||await fetch(s)}}}).main()})();