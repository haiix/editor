"use strict";(self.webpackChunkhaiix_editor=self.webpackChunkhaiix_editor||[]).push([[834],{4834:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c,passwordPrompt:()=>p});var a=n(5588),i=n(1804),s=n(4857),r=n(604);const l=".zip",o=(0,r.vf)(class extends r.Vq{constructor(e={},t=[]){super(e,t),this.form.name.value=e.arguments[1];const n=e.arguments[2];n&&(this.form["confirm-password"].value=n,this.form.password.value=n,this.details.open=!0)}titleTemplate(){return"プロジェクトを保存"}bodyTemplate(){const e="my-save-dialog-body";return(0,s.ZP)(`\n      .${e} label {\n        display: block;\n        white-space: nowrap;\n        height: 24px;\n      }\n      .${e} label > span {\n        display: inline-block;\n        width: 100px;\n      }\n      .${e} details {\n        margin-top: 8px;\n      }\n      .${e} summary {\n        height: 24px;\n        color: #08E;\n        cursor: pointer;\n      }\n      .${e} summary:hover {\n        text-decoration: underline;\n      }\n    `),`\n      <form id="form" class="${e}" onsubmit="event.preventDefault()">\n        <label>\n          <span>ファイル名:</span>\n          <input name="name" /> .zip\n        </label>\n        <details id="details">\n          <summary tabindex="-1">オプション</summary>\n          <label>\n            <span>パスワード:</span>\n            <input type="password" name="password" autocomplete="none" />\n          </label>\n          <label>\n            <span>パスワード(確認):</span>\n            <input type="password" name="confirm-password" autocomplete="none" />\n          </label>\n        </details>\n      </form>\n    `}buttonsTemplate(){return'\n      <button onclick="return this.handleOK(event)">OK</button>\n      <button onclick="return this.handleCancel(event)">キャンセル</button>\n    '}handleOK(e){this.resolve(Array.from(this.form.elements).reduce(((e,t)=>(e[t.name]=t.value,e)),{}))}}),p=(0,r.vf)(class extends r.NL{bodyTemplate(){return'\n      <form onsubmit="event.preventDefault()">\n        <p id="text" style="white-space: pre-wrap;"></p>\n        <input id="input" type="password" name="password" autocomplete="none" />\n      </form>\n    '}});class c{constructor(e){this.setting=e}async save(e){const t=".zip"===this.setting.fileName.slice(-4)?this.setting.fileName.slice(0,-4):this.setting.fileName,n=await o("",t,this.setting.password);if(!n)return!1;if(n.password!==n["confirm-password"])throw new Error("パスワードが一致しません");const a=(n.name||"untitled")+(n.name.slice(-4)===l?"":l),i=n.password,s=await e(),r=await this.createEncryptedZipBlob(i,s);return this.downloadFile(a,r),this.setting.fileName=a,this.setting.password=i,!0}async createEncryptedZipBlob(e,t){const n=await this.createZip(t,{level:e?0:5});return e?await this.createZip([{path:"encrypted.zip",file:n}],{password:e,level:5}):n}async createZip(e,t){const n=new a.U5("application/zip"),i=new a._Q(n,t);for(const{file:t,path:n}of e){const e={};e.directory=!t,await i.add(n,t?new a.Nt(t):null,e)}return await i.close(),await n.getData()}async downloadFile(e,t){const n=URL.createObjectURL(t);i.Z.createElement(`<a href="${n}" download="${e}"></a>`).click(),URL.revokeObjectURL(n)}async load(e){const t=await(0,r.ZB)(l);if(t)return this.setting.fileName=t.name,await this.readEncryptedZipFile(t)}async readEncryptedZipFile(e){try{const t=await this.readZip(e);return 1===t.length&&"encrypted.zip"===t[0].path?await this.readZip(t[0].file):t}catch(e){throw new Error("ファイルを開けません:\n"+e.message)}}async readZip(e,t={}){const n=new a.Mr(new a.Nt(e)),i=await n.getEntries();let s="";for(const e of i){const t=e.filename.indexOf("/");if(""===s){if(t<0)break;s=e.filename.slice(0,t+1)}else if(t<0||e.filename.slice(0,t+1)!==s){s="";break}}return await Promise.all(i.filter((e=>!e.directory&&e.filename!==s)).map(async function(e){if(!t.password&&e.encrypted){const e=await p("パスワードを入力してください。");if(null==e)return;t.password=e,this.setting.password=e}return{path:("/"===e.filename.slice(-1)?e.filename.slice(0,-1):e.filename).slice(s.length),file:e.directory?null:await e.getData(new a.U5(this.getMimeFromExt(e.filename)),t)}}.bind(this)))}getMimeFromExt(e){return{js:"text/javascript",mjs:"text/javascript",css:"text/css",html:"text/html",htm:"text/html",json:"application/json",xml:"application/xml",gif:"image/gif",png:"image/png",jpeg:"image/jpeg",jpg:"image/jpeg",svg:"image/svg+xml",txt:"text/plain",md:"text/markdown"}[e.slice(e.lastIndexOf(".")+1)]||null}}}}]);